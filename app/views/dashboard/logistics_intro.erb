<div class="pagetitle">
  <h1>研究摘要</h1>
  <nav>
    <ol class="breadcrumb">
      <li class="breadcrumb-item"><a href="/">首頁</a></li>
      <li class="breadcrumb-item">物流小組</li>
      <li class="breadcrumb-item">研究摘要</li>
    </ol>
  </nav>
</div><!-- End Page Title -->

<section class="section">
  <div class="row">
    <div class="col-lg-6">

      <div class="card">
        <div class="card-body">
          <h5 class="card-title">User Story</h5>
          <p>身為一個電商賣家，很清楚物流在整個服務裡是「很重要」但「很難掌握」的環節，例如雙十一購物節因物流延宕衍伸出各種交易糾紛。希望能夠用機器學習的方式，預測「當新的訂單出現時，物流是否會延宕」，以利及早做應對，提升整體服務與穩定公司的運作。</p>
        </div>
      </div>

    </div>

    <div class="col-lg-6">

      <div class="card">
        <div class="card-body">
          <h5 class="card-title">研究背景</h5>
          <p>ourKites以加拿大沃爾瑪在暴風雪期間的供應狀況為例，沃爾瑪透過機器學習和數據蒐集，以更清楚供應鏈的狀態，因此可以根據卡車在不利條件下從A點到B點所需的時間，了解如何做出應對，以及即使卡車仍未滿載，是否該提早嘗試在暴風雪期間補充貨架，做出超前部署。</p>
        </div>
      </div>

    </div>
  </div>

  <div class="row">
    <div class="col-sm-12">

      <div class="card">
        <div class="card-body">
          <h5 class="card-title">Dataset 結構概述</h5>
          <p class="part in-view" data-startline="14" data-endline="14" data-position="182" data-size="0"><span data-position="182" data-size="2">Y:</span></p>
          <ul class="part in-view" data-startline="15" data-endline="18" data-original-title="" title="">
            <li class="" data-startline="15" data-endline="18" data-position="188" data-size="0"><code data-position="189" data-size="20">is_delivered_delayed</code><span data-position="210" data-size="7"> 是否延遲送達</span><br>
            <span data-position="218" data-size="39">來自 TABLE: orders 裡的「實際送達時間」&gt;「預估抵達時間」做比較</span><br>
            <span data-position="258" data-size="27">變數型態： binary (True / False)</span></li>
          </ul>
          <p class="part in-view" data-startline="19" data-endline="19" data-position="287" data-size="0"><span data-position="287" data-size="2">–</span></p>
          <p class="part in-view" data-startline="21" data-endline="21" data-position="291" data-size="0"><span data-position="291" data-size="2">X:</span></p>
          <ul class="part in-view" data-startline="23" data-endline="67">
          <li class="" data-startline="23" data-endline="24" data-position="298" data-size="0"><span data-position="301" data-size="9"> 訂單的商品金額 </span><code data-position="311" data-size="5">SUM()</code>
          <ul>
          <li class="" data-startline="24" data-endline="24" data-position="322" data-size="0"><code data-position="323" data-size="16">total_item_value</code></li>
          </ul>
          </li>
          <li class="" data-startline="25" data-endline="26" data-position="343" data-size="0"><span data-position="346" data-size="9"> 訂單的運費金額 </span><code data-position="356" data-size="5">SUM()</code>
          <ul>
          <li class="" data-startline="26" data-endline="26" data-position="367" data-size="0"><code data-position="368" data-size="19">total_freight_value</code></li>
          </ul>
          </li>
          <li class="" data-startline="27" data-endline="28" data-position="391" data-size="0"><span data-position="391" data-size="5">訂單總金額</span>
          <ul>
          <li class="" data-startline="28" data-endline="28" data-position="401" data-size="0"><code data-position="402" data-size="19">total_payment_value</code></li>
          </ul>
          </li>
          <li class="" data-startline="29" data-endline="30" data-position="425" data-size="0"><span data-position="428" data-size="6"> 商品重量 </span><code data-position="435" data-size="5">SUM()</code>
          <ul>
          <li class="" data-startline="30" data-endline="30" data-position="446" data-size="0"><code data-position="447" data-size="20">total_package_volume</code></li>
          </ul>
          </li>
          <li class="" data-startline="31" data-endline="32" data-position="471" data-size="0"><span data-position="474" data-size="6"> 商品體積 </span><code data-position="481" data-size="5">SUM()</code>
          <ul>
          <li class="" data-startline="32" data-endline="32" data-position="492" data-size="0"><code data-position="493" data-size="22">total_package_weight_g</code></li>
          </ul>
          </li>
          <li class="" data-startline="33" data-endline="34" data-position="519" data-size="0"><span data-position="522" data-size="8"> 商品品項數量 </span><code data-position="531" data-size="5">SUM()</code>
          <ul>
          <li class="" data-startline="34" data-endline="34" data-position="542" data-size="0"><code data-position="543" data-size="10">item_count</code></li>
          </ul>
          </li>
          <li class="" data-startline="35" data-endline="36" data-position="557" data-size="0"><span data-position="557" data-size="9">商品類別 (名稱)</span>
          <ul>
          <li class="" data-startline="36" data-endline="36" data-position="571" data-size="0"><code data-position="572" data-size="13">category_name</code></li>
          </ul>
          </li>
          <li class="" data-startline="37" data-endline="38" data-position="589" data-size="0"><span data-position="589" data-size="12">商品類別 (六大類標籤)</span>
          <ul>
          <li class="" data-startline="38" data-endline="38" data-position="606" data-size="0"><code data-position="607" data-size="13">category_type</code></li>
          </ul>
          </li>
          <li class="" data-startline="39" data-endline="40" data-position="624" data-size="0"><span data-position="627" data-size="27"> 賣家所在的州/城市 (標籤化 - 合併成四大區域： </span><code data-position="655" data-size="14">NW, SE, CE, NE</code><span data-position="670" data-size="1">)</span>
          <ul>
          <li class="" data-startline="40" data-endline="40" data-position="676" data-size="0"><code data-position="677" data-size="24">seller_state_region_type</code></li>
          </ul>
          </li>
          <li class="" data-startline="41" data-endline="42" data-position="705" data-size="0"><span data-position="708" data-size="27"> 買家所在的州/城市 (標籤化 - 合併成四大區域： </span><code data-position="736" data-size="14">NW, SE, CE, NE</code><span data-position="751" data-size="1">)</span>
          <ul>
          <li class="" data-startline="42" data-endline="42" data-position="757" data-size="0"><code data-position="758" data-size="26">customer_state_region_type</code></li>
          </ul>
          </li>
          <li class="" data-startline="43" data-endline="44" data-position="788" data-size="0"><span data-position="791" data-size="19"> 買賣雙方經緯度的「直線」距離 單位：</span><code data-position="811" data-size="2">km</code>
          <ul>
          <li class="" data-startline="44" data-endline="44" data-position="819" data-size="0"><code data-position="820" data-size="12">geo_distance</code></li>
          </ul>
          </li>
          <li class="" data-startline="45" data-endline="46" data-position="836" data-size="0"><span data-position="839" data-size="34"> 賣家審核時間 (訂單成立 -&gt; 賣家確認準備出貨的時間) 單位： </span><code data-position="874" data-size="1">h</code>
          <ul>
          <li class="" data-startline="46" data-endline="46" data-position="881" data-size="0"><code data-position="882" data-size="28">until_approved_waiting_hours</code></li>
          </ul>
          </li>
          <li class="" data-startline="47" data-endline="48" data-position="914" data-size="0"><span data-position="917" data-size="34"> 賣家備貨時間 (訂單確認 -&gt; 備貨完成送交物流的時間) 單位： </span><code data-position="952" data-size="1">h</code>
          <ul>
          <li class="" data-startline="48" data-endline="48" data-position="959" data-size="0"><code data-position="960" data-size="27">until_shipped_waiting_hours</code></li>
          </ul>
          </li>
          <li class="" data-startline="49" data-endline="50" data-position="991" data-size="0"><span data-position="994" data-size="31"> 物流送達時間 (物流收到 -&gt; 送達消費者的時間) 單位： </span><code data-position="1026" data-size="1">h</code>
          <ul>
          <li class="" data-startline="50" data-endline="50" data-position="1033" data-size="0"><code data-position="1034" data-size="29">until_delivered_waiting_hours</code></li>
          </ul>
          </li>
          <li class="" data-startline="51" data-endline="53" data-position="1067" data-size="0"><span data-position="1070" data-size="31"> 整體處理時間 (訂單成立 -&gt; 送達消費者的時間) 單位： </span><code data-position="1102" data-size="1">h</code>
          <ul>
          <li class="" data-startline="52" data-endline="52" data-position="1109" data-size="0"><span data-position="1109" data-size="25">備註：消費者的體感時間，只想知道下單後多久到我手上</span></li>
          <li class="" data-startline="53" data-endline="53" data-position="1139" data-size="0"><code data-position="1140" data-size="27">total_logistics_using_hours</code></li>
          </ul>
          </li>
          <li class="" data-startline="54" data-endline="56" data-position="1171" data-size="0"><span data-position="1174" data-size="29"> 預估完成時間 (訂單成立 -&gt; 預估抵達時間) 單位： </span><code data-position="1204" data-size="1">h</code>
          <ul>
          <li class="" data-startline="55" data-endline="56" data-position="1211" data-size="0"><span data-position="1211" data-size="22">備註：訂單確認時，店家自己設置的預估完成時間</span>
          <ul>
          <li class="" data-startline="56" data-endline="56" data-position="1240" data-size="0"><code data-position="1241" data-size="31">estimated_logistics_using_hours</code></li>
          </ul>
          </li>
          </ul>
          </li>
          <li class="" data-startline="57" data-endline="67" data-position="1276" data-size="0"><span data-position="1276" data-size="35">出貨日 order_delivered_carrier_date 的欄位加工</span>
          <ul>
          <li class="" data-startline="58" data-endline="59" data-position="1319" data-size="0"><span data-position="1322" data-size="24"> 年/月 (2018-01 ~ 2018-12)</span>
          <ul>
          <li class="" data-startline="59" data-endline="59" data-position="1353" data-size="0"><code data-position="1354" data-size="25">order_purchase_year_month</code></li>
          </ul>
          </li>
          <li class="" data-startline="60" data-endline="61" data-position="1385" data-size="0"><span data-position="1388" data-size="40"> 年/週 (2018-01 ~ 2018-52) # 用來偵測哪一週整體物流繁忙</span>
          <ul>
          <li class="" data-startline="61" data-endline="61" data-position="1435" data-size="0"><code data-position="1436" data-size="23">order_purchase_yearweek</code></li>
          </ul>
          </li>
          <li class="" data-startline="62" data-endline="63" data-position="1465" data-size="0"><span data-position="1468" data-size="16"> 時段 (早, 午, 晚, 夜)</span>
          <ul>
          <li class="" data-startline="63" data-endline="63" data-position="1491" data-size="0"><code data-position="1492" data-size="23">order_purchase_time_day</code></li>
          </ul>
          </li>
          <li class="" data-startline="64" data-endline="67" data-position="1521" data-size="0"><span data-position="1524" data-size="12"> 星期幾 (0 ~ 6)</span>
          <ul>
          <li class="" data-startline="65" data-endline="67" data-position="1543" data-size="0"><code data-position="1544" data-size="24">order_purchase_dayofweek</code></li>
          </ul>
          </li>
          </ul>
          </li>
          </ul>
          <p class="part in-view" data-startline="71" data-endline="72" data-position="1602" data-size="0"><img src="https://hackmd.io/_uploads/rywntNX9Y.png" alt="" class="" data-position="1602" data-size="45" loading="lazy"><br>
          <img src="https://hackmd.io/_uploads/SkCL9V79t.png" alt="" class="" data-position="1648" data-size="45" loading="lazy"></p>
        </div>
      </div>

    </div>
  </div>

  <%# heatMap %>
  <div class="row">
    <div class="col-sm-12">

      <div class="card">
        <div class="card-body">
          <h5 class="card-title">Heat Map(待命名)</h5>
          <p>description(待補充)</p>
          <div id="heatMap" style="width: 100%;height: 500px;"></div>
        </div>
      </div>

    </div>
  </div>

  <%# columnLineChart %>
  <div class="row">
    <div class="col-sm-12">

      <div class="card">
        <div class="card-body">
          <h5 class="card-title">Column Line Chart(待命名)</h5>
          <p>description(待補充)</p>
          <div id="columnLineChart" style="width: 100%;height: 500px;"></div>
        </div>
      </div>

    </div>
  </div>

  <%# columnLineChart %>
  <div class="row">
    <div class="col-sm-12">

      <div class="card">
        <div class="card-body">
          <h5 class="card-title">Pie Chart(待命名)</h5>
          <p>description(待補充)</p>
          <div id="pieChart" style="width: 100%;height: 500px;"></div>
        </div>
      </div>

    </div>
  </div>

  <%# columnLineMedian %>
  <div class="row">
    <div class="col-sm-12">

      <div class="card">
        <div class="card-body">
          <h5 class="card-title">columnLineMedian(待命名)</h5>
          <p>description(待補充)</p>
          <div id="columnLineMedian" style="width: 100%;height: 500px;"></div>
        </div>
      </div>

    </div>
  </div>
</section>


<%= content_for :javascript do %>
  <!-- heatMap -->
  <script>
    am5.ready(function() {

      // Create root element
      // https://www.amcharts.com/docs/v5/getting-started/#Root_element
      var root = am5.Root.new("heatMap");


      // Set themes
      // https://www.amcharts.com/docs/v5/concepts/themes/
      root.setThemes([
        am5themes_Animated.new(root)
      ]);


      // Create chart
      // https://www.amcharts.com/docs/v5/charts/xy-chart/
      var chart = root.container.children.push(am5xy.XYChart.new(root, {
        panX: false,
        panY: false,
        wheelX: "none",
        wheelY: "none",
        layout: root.verticalLayout
      }));


      // Create axes and their renderers
      var yRenderer = am5xy.AxisRendererY.new(root, {
        visible: false,
        minGridDistance: 20,
        inversed: true
      });

      yRenderer.grid.template.set("visible", false);

      var yAxis = chart.yAxes.push(am5xy.CategoryAxis.new(root, {
        maxDeviation: 0,
        renderer: yRenderer,
        categoryField: "seller"
      }));

      var xRenderer = am5xy.AxisRendererX.new(root, {
        visible: false,
        minGridDistance: 10,
        opposite:true
      });

      xRenderer.grid.template.set("visible", false);

      var xAxis = chart.xAxes.push(am5xy.CategoryAxis.new(root, {
        renderer: xRenderer,
        categoryField: "customer"
      }));


      // Create series
      // https://www.amcharts.com/docs/v5/charts/xy-chart/#Adding_series
      var series = chart.series.push(am5xy.ColumnSeries.new(root, {
        calculateAggregates: true,
        stroke: am5.color(0xffffff),
        clustered: false,
        xAxis: xAxis,
        yAxis: yAxis,
        categoryXField: "customer",
        categoryYField: "seller",
        valueField: "value"
      }));

      series.columns.template.setAll({
        tooltipText: "{value}",
        strokeOpacity: 1,
        strokeWidth: 2,
        width: am5.percent(100),
        height: am5.percent(100)
      });

      series.columns.template.events.on("pointerover", function(event) {
        var di = event.target.dataItem;
        if (di) {
          heatLegend.showValue(di.get("value", 0));
        }
      });

      series.events.on("datavalidated", function() {
        heatLegend.set("startValue", series.getPrivate("valueHigh"));
        heatLegend.set("endValue", series.getPrivate("valueLow"));
      });


      // Set up heat rules
      // https://www.amcharts.com/docs/v5/concepts/settings/heat-rules/
      series.set("heatRules", [{
        target: series.columns.template,
        min: am5.color(0xfffb77),
        max: am5.color(0xfe131a),
        dataField: "value",
        key: "fill"
      }]);


      // Add heat legend
      // https://www.amcharts.com/docs/v5/concepts/legend/heat-legend/
      var heatLegend = chart.bottomAxesContainer.children.push(am5.HeatLegend.new(root, {
        orientation: "horizontal",
        endColor: am5.color(0xfffb77),
        startColor: am5.color(0xfe131a)
      }));


      // Set data
      // https://www.amcharts.com/docs/v5/charts/xy-chart/#Setting_data
      //chart.dataSource.url = "http://www.myweb.com/data.json";
      var data = [
          {
              "customer": "CE",
              "seller": "CE",
              "value": 365
          },
          {
              "customer": "CE",
              "seller": "NE",
              "value": 39
          },
          {
              "customer": "CE",
              "seller": "NW",
              "value": 3
          },
          {
              "customer": "CE",
              "seller": "SE",
              "value": 2744
          },
          {
              "customer": "NE",
              "seller": "CE",
              "value": 105
          },
          {
              "customer": "NE",
              "seller": "NE",
              "value": 34
          },
          {
              "customer": "NE",
              "seller": "NW",
              "value": 6
          },
          {
              "customer": "NE",
              "seller": "SE",
              "value": 754
          },
          {
              "customer": "NW",
              "seller": "CE",
              "value": 38
          },
          {
              "customer": "NW",
              "seller": "NE",
              "value": 5
          },
          {
              "customer": "NW",
              "seller": "NW",
              "value": 1
          },
          {
              "customer": "NW",
              "seller": "SE",
              "value": 269
          },
          {
              "customer": "SE",
              "seller": "CE",
              "value": 352
          },
          {
              "customer": "SE",
              "seller": "NE",
              "value": 60
          },
          {
              "customer": "SE",
              "seller": "NW",
              "value": 3
          },
          {
              "customer": "SE",
              "seller": "SE",
              "value": 2873
          }
      ]

      series.data.setAll(data);

      yAxis.data.setAll([
        { seller: "SE" },
        { seller: "CE" },
        { seller: "NW" },
        { seller: "NE" }
      ]);

      xAxis.data.setAll([
        { customer: "SE" },
        { customer: "CE" },
        { customer: "NW" },
        { customer: "NE" }
      ]);

      // Make stuff animate on load
      // https://www.amcharts.com/docs/v5/concepts/animations/#Initial_animation
      chart.appear(1000, 100);

    }); // end am5.ready()
  </script>

  <!-- columnLineChart -->
  <script>
    am5.ready(function() {

      // Create root element
      // https://www.amcharts.com/docs/v5/getting-started/#Root_element
      var root = am5.Root.new("columnLineChart");

      // Set themes
      // https://www.amcharts.com/docs/v5/concepts/themes/
      root.setThemes([am5themes_Animated.new(root)]);

      // Create chart
      // https://www.amcharts.com/docs/v5/charts/xy-chart/
      var chart = root.container.children.push(
        am5xy.XYChart.new(root, {
          panX: false,
          panY: false,
          wheelX: "panX",
          wheelY: "zoomX",
          layout: root.verticalLayout
        })
      );

      // Add scrollbar
      // https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/
      chart.set(
        "scrollbarX",
        am5.Scrollbar.new(root, {
          orientation: "horizontal"
        })
      );

      var data = [
          {
              "order_purchase_time_day": "afternoon",
              "is_delivered_delayed": 573,
              "delayday": 13.5051802946
          },
          {
              "order_purchase_time_day": "dawn",
              "is_delivered_delayed": 54,
              "delayday": 14.1237739374
          },
          {
              "order_purchase_time_day": "morning",
              "is_delivered_delayed": 264,
              "delayday": 13.7880751457
          },
          {
              "order_purchase_time_day": "night",
              "is_delivered_delayed": 372,
              "delayday": 13.4136519309
          }
      ];

      // Create axes
      // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/
      var xAxis = chart.xAxes.push(
        am5xy.CategoryAxis.new(root, {
          categoryField: "order_purchase_time_day",
          renderer: am5xy.AxisRendererX.new(root, {}),
          tooltip: am5.Tooltip.new(root, {})
        })
      );

      xAxis.data.setAll(data);

      var yAxis = chart.yAxes.push(
        am5xy.ValueAxis.new(root, {
          min: 0,
          extraMax: 0.1,
          renderer: am5xy.AxisRendererY.new(root, {})
        })
      );


      // Add series
      // https://www.amcharts.com/docs/v5/charts/xy-chart/series/

      var series1 = chart.series.push(
        am5xy.ColumnSeries.new(root, {
          name: "is_delivered_delayed",
          xAxis: xAxis,
          yAxis: yAxis,
          valueYField: "is_delivered_delayed",
          categoryXField: "order_purchase_time_day",
          tooltip:am5.Tooltip.new(root, {
            pointerOrientation:"horizontal",
            labelText:"{name} in {categoryX}: {valueY} {info}"
          })
        })
      );

      series1.columns.template.setAll({
        tooltipY: am5.percent(10),
        templateField: "columnSettings"
      });

      series1.data.setAll(data);

      var series2 = chart.series.push(
        am5xy.LineSeries.new(root, {
          name: "delayday",
          xAxis: xAxis,
          yAxis: yAxis,
          valueYField: "delayday",
          categoryXField: "order_purchase_time_day",
          tooltip:am5.Tooltip.new(root, {
            pointerOrientation:"horizontal",
            labelText:"{name} in {categoryX}: {valueY} {info}"
          })
        })
      );

      series2.strokes.template.setAll({
        strokeWidth: 3,
        templateField: "strokeSettings"
      });


      series2.data.setAll(data);

      series2.bullets.push(function () {
        return am5.Bullet.new(root, {
          sprite: am5.Circle.new(root, {
            strokeWidth: 3,
            stroke: series2.get("stroke"),
            radius: 5,
            fill: root.interfaceColors.get("background")
          })
        });
      });

      chart.set("cursor", am5xy.XYCursor.new(root, {}));

      // Add legend
      // https://www.amcharts.com/docs/v5/charts/xy-chart/legend-xy-series/
      var legend = chart.children.push(
        am5.Legend.new(root, {
          centerX: am5.p50,
          x: am5.p50
        })
      );
      legend.data.setAll(chart.series.values);

      // Make stuff animate on load
      // https://www.amcharts.com/docs/v5/concepts/animations/
      chart.appear(1000, 100);
      series1.appear();

    }); // end am5.ready()
  </script>

  <!-- pieChart -->
  <script>
    am4core.ready(function() {

      // Themes begin
      am4core.useTheme(am4themes_animated);
      // Themes end

      var chart = am4core.create("pieChart", am4charts.PieChart3D);
      chart.hiddenState.properties.opacity = 0; // this creates initial fade-in

      chart.legend = new am4charts.Legend();

      chart.data = [
      {
          country: "Delay",
          litres: 7614
        },
        {
          country: "Ontime",
          litres: 85981
        }
      ];

      chart.innerRadius = 100;

      var series = chart.series.push(new am4charts.PieSeries3D());
      series.dataFields.value = "litres";
      series.dataFields.category = "country";

    }); // end am4core.ready()
  </script>
<% end %>
